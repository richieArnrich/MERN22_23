Node js is a javascript runtime environment
- Node js is used for server-side programming
- Node js is used for creating web applications
- It uses chromes v8 engine to compile javascript code

Setting up the nodejs project
=====================================
- Create a new folder for the project
- Open the terminal and navigate to the project folder
- Commands to execute:
    - npm init -y (to create a package.json file)
    - to install any package npm instal package_name
    - to run the project node file_name

=======================================
### Modules in nodejs
=======================================
- Modules are used to organize code
- Modules are blocks of code that can reused in other files/folders
- Modules are used to avoid code duplication
- Modules are used to make the code more readable and maintainable
- To import modules use the require()
- To export modules use the module.exports = {module_name} or exports = {module_name}
- If we want to use import statement for modules, set "type": "module" in your package. json file.

Types of modules:
================
- Built-in modules: These are modules that are provided by nodejs itself. Examples include http,
fs, path, etc.
- Third-party modules: These are modules that are not provided by nodejs itself. Examples include express
mongodb, cors etc
- Custom modules: These are built by programmers
=======================================

File System module(fs) in nodejs
=====================================
- The fs module is used to interact with the file system
- It provides methods to read and write files
- It provides methods to create and delete files and directories
- It provides methods to check if a file or directory exists
- It provides methods to get the information of a file or directory
- It provides methods to set the permissions of a file or directory
-------------------------------------
Writing into a file:
================
- fs.writeFile(filename, data, callback)
- fs.writeFileSync(filename, data)
- fs.appendFile(filename, data, callback)
- fs.appendFileSync(filename, data)
=====================================
=====================================
Read from a file
================
- fs.readFile(filename, callback)
- fs.readFileSync(filename)
=====================================
=====================================
### Expressjs
=====================================
- Expressjs is a popular web framework for nodejs
- It provides a lot of features out of the box
- It provides a lot of middleware functions to handle requests and responses
- It provides a lot of methods to handle routes
- It provides a lot of methods to handle templates (html files)
- It provides a lot of methods to handle static files

---------------------------------------
    Authentication on Expressjs
    =====================================
    - We can use middleware functions to authenticate users
    - Use the package called bcrypt to handle authentication (advanced)
    - Use the package called jsonwebtoken to handle authentication (advanced)
    =====================================
    We can create cookies using jwt(jsonwebtoken)
    =====================================
    What are cookies?
    ================
    - Cookies are small pieces of data that are stored on the client's browser
    - They are used to store information about the user logged in
    - They are used to store information about the user's preferences
---------------------------------------------------------------------------------------
Template Engines:
================
- We can use template engines to render html files
- We can use templates to renders static files (images/styles etc..)
- We can use templates to render dynamic data (data from database)
- The types of template engines are:
    - EJS (Embedded JavaScript) -> it has syntax similar to html and coding into express js is simple
    - Pug (formerly Jade)
    - Handlebars
    - Mustache
    - Nunjucks
=====================================
Steps to configure template engine(ejs) into express js server
=====================================
1. Install ejs package
2. Create a new file called index.ejs
3. Create the new file in a folder called views
4. Create a new file called index.js(server.js)
5. Import ejs package in index.js
6. Use the ejs.renderFile() method to render the index.ejs file
or
7. Use the res.render() method to render the index.ejs file
---------------------
Set up views in express js server
=====================================
1. Create a new folder called views
2. in server.js write the following code:
app.use(express.static('public'))
app.set('views', path.join(__dirname, 'views'))

public is the folder which stores styles and images
views is the folder which stores ejs files
